#!/bin/bash

##################################################
# Touchpad Gestures
##################################################

# https://github.com/bulletmark/libinput-gestures

# paru -S gestures libinput-gestures xorg-xinput
# sudo gpasswd -a $USER input
# libinput-gestures-setup autostart start

# ~/.config/libinput-gestures.conf gestures for Google Chrome
# gesture swipe up        4       xdotool key control+plus
# gesture swipe down      4       xdotool key control+minus
# gesture swipe left      4       xdotool key alt+Right
# gesture swipe right     4       xdotool key alt+Left
# gesture swipe right_up  4       xdotool key control+Tab
# gesture swipe left_up   4       xdotool key control+shift+Tab
# gesture swipe left_down 4       xdotool key control+w
# gesture swipe right_down 4      xdotool key control+shift+t

##################################################
# Intel + Vulkan Driver
##################################################

# paru -S xf86-video-intel
# paru -S lib32-mesa vulkan-intel lib32-vulkan-intel vulkan-tools
# sudo vim /etc/X11/xorg.conf.d/20-intel.conf

# Section "Device"
#    Identifier  "Intel Graphics"
#    Driver      "intel"
#    Option      "DRI"    "3"
# EndSection

##################################################
# NVIDIA DRIVER (https://wiki.archlinux.org/title/Bumblebee)
##################################################

# paru -S mesa nvidia-390xx lib32-nvidia-390xx-utils bumblebee bbswitch primus lib32-virtualgl
# (optional): paru -S xf86-video-intel

# sudo gpasswd -a $USER bumblebee
# sudo systemctl enable bumblebeed.service

# Test
# optirun glxspheres64
# primusrun glxspheres64

##################################################
# ARCH UPDATE INDICATOR (https://github.com/RaphaelRochet/arch-update/wiki)
##################################################

# Settings: Check Update Command
# /bin/sh -c "(/usr/bin/checkupdates; /usr/bin/paru -Qqu --color never | sed 's/Get .*//') | sort -u -t' ' -k1,1"

# Settings: Update Command
# gnome-terminal -e 'sh -c  "ecos-update"'

##################################################
# FIREFOX THEME
# ##################################################

# Start Firefox once and execute command:
# $HOME/.cache/theme/tweaks.sh --firefox

##################################################
# Refresh Mirrorlist
# ##################################################

# paru -S reflector
# sudo reflector --verbose --country 'Germany' -l 15 -p https --sort rate --save /etc/pacman.d/mirrorlist

##################################################
# VARIABLES
##################################################

ECOS_HOME="$HOME/.ecos"
ECOS_CORE="$ECOS_HOME/bin/ecos"
ECOS_INITIALIZED="$HOME/.cache/ecos/initialized"
ECOS_CORE_URL="https://raw.githubusercontent.com/murkl/ecos/main/ecos"

##################################################
# INSTALL
##################################################

install() {
    exec_paru() {
        paru --noconfirm --needed --sudoloop -S $1
    }

    ##################################################
    # INSTALL ECOS CORE
    ##################################################
    mkdir -p "$ECOS_HOME/bin"

    # Download new version
    if ! curl -s -L "$ECOS_CORE_URL" >"$ECOS_CORE"; then
        echo "ERROR: ECOS CORE DOWNLOAD"
        exit 1
    fi
    if ! chmod +x "$ECOS_CORE"; then
        echo "ERROR: ECOS CORE NOT FOUND"
        exit 1
    fi

    ##################################################
    # UPDATE PARU
    ##################################################
    paru -Syyu

    ##################################################
    # INSTALL PACKAGES
    ##################################################

    # install_packages() {

    # Gnome Minimal -  https://archlinux.org/groups/x86_64/gnome/
    exec_paru "gdm gnome-shell gnome-control-center gnome-terminal nautilus xdg-user-dirs"

    # Gnome Shell Extensions
    exec_paru "chrome-gnome-shell-git"
    exec_paru "gnome-shell-extensions"
    exec_paru "gnome-shell-extension-sound-output-device-chooser"
    exec_paru "gnome-shell-extension-arch-update"
    exec_paru "gnome-shell-extension-dash-to-dock-gnome40-git"
    exec_paru "gnome-shell-extension-gsconnect"
    exec_paru "gnome-shell-extension-caffeine-git"
    exec_paru "gnome-shell-extension-blur-my-shell-git"
    exec_paru "gnome-shell-extension-just-perfection-desktop-git"
    exec_paru "gnome-shell-extension-x11gestures"
    exec_paru "gnome-shell-extension-appindicator-git"
    exec_paru "gnome-shell-extension-status-area-horizontal-spacing"
    #exec_paru "gnome-shell-extension-tray-icons-reloaded-git"
    #exec_paru "gnome-shell-extension-clipboard-indicator-git"

    # ZSH
    exec_paru "zsh-autosuggestions zsh-syntax-highlighting"

    # Mouse Gestures
    exec_paru "touchegg touche"

    # System Tools
    exec_paru "gnome-keyring seahorse"
    exec_paru "gnome-tweak-tool"
    exec_paru "evince eog gthumb gedit gnome-calculator totem"
    exec_paru "gnome-disk-utility gnome-usage neofetch htop"
    exec_paru "gnome-screenshot"
    exec_paru "gnome-backgrounds"
    exec_paru "pacman-contrib man-db"
    exec_paru "hunspell hunspell-en_us hunspell-de"
    exec_paru "samba"
    exec_paru "gvfs gvfs-mtp gvfs-smb gvfs-nfs"
    exec_paru "gnome-user-share nfs-utils"
    exec_paru "wireless_tools wmctrl xdotool"
    exec_paru "zenity ffmpeg youtube-dl rsync curl"
    exec_paru "pavucontrol"
    exec_paru "cava"

    # Hide mouse pointer
    exec_paru "unclutter"

    # Codecs
    exec_paru "gst-libav"

    # Archive Manager
    exec_paru "file-roller zip unzip unrar"

    # Apps
    exec_paru "firefox"
    exec_paru "gnome-calendar"
    exec_paru "gnome-weather"
    exec_paru "rhythmbox-plugin-alternative-toolbar-git"
    exec_paru "geary"
    exec_paru "keepassxc"
    exec_paru "libreoffice-still-de"
    #exec_paru "fromscratch-bin"

    # Fonts
    exec_paru "ttf-dejavu"
    exec_paru "ttf-liberation"
    exec_paru "noto-fonts-emoji"
    exec_paru "lib32-fontconfig"

    # Icons
    #exec_paru "qogir-icon-theme-git elementary-icon-theme luv-icon-theme-git"
    exec_paru "qogir-icon-theme-git"

    # Vim
    exec_paru "vim"

    # Wine & Dependencies
    exec_paru "lutris-wine-meta winetricks"

    # VSCodium
    #exec_paru "vscodium-bin vscodium-bin-marketplace"

    # Spotify
    #curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | gpg --import -
    #exec_paru "spotify-adblock-git"

    # Kodi
    #exec_paru "kodi-x11 kodi-addon-inputstream-adaptive"

    # Steam
    #exec_paru "steam"

    # VirtualBox
    #exec_paru "virtualbox virtualbox-host-modules-arch"

    # Lutris
    # Wine: https://github.com/lutris/docs/blob/master/WineDependencies.md
    # Graphic Driver: https://github.com/lutris/docs/blob/master/InstallingDrivers.md
    #exec_paru "lutris lutris-wine-meta"

    ##################################################
    # INSTALL PACKAGE CONFIG
    ##################################################

    # GNOME DISPLAY MANAGER
    sudo sed -i "s/^#WaylandEnable=false/WaylandEnable=false/g" "/etc/gdm/custom.conf"

    # SAMBA
    if [ ! -f "/etc/samba/smb.conf" ]; then
        {
            echo "[global]"
            echo "   workgroup = WORKGROUP"
            echo "   log file = /var/log/samba/%m"
        } >"/tmp/smb.conf"
        sudo mv "/tmp/smb.conf" "/etc/samba/smb.conf"
    fi

    # TLP
    if [ -f "/etc/tlp.conf" ]; then
        sudo sed -i "s/^#CPU_BOOST_ON_AC=1/CPU_BOOST_ON_AC=0/g" "/etc/tlp.conf"
        sudo sed -i "s/^#CPU_BOOST_ON_BAT=0/CPU_BOOST_ON_BAT=0/g" "/etc/tlp.conf"
    fi

    ##################################################
    # ENABE SERVICES
    ##################################################

    sudo systemctl enable gdm.service
    sudo systemctl enable smb.service
    sudo systemctl enable nmb.service
    sudo systemctl enable touchegg.service
    sudo systemctl enable avahi-daemon
    sudo systemctl enable bluetooth.service
    sudo systemctl enable cups.service

    ##################################################
    # SET GNOME SETTINGS
    ##################################################

    # https://askubuntu.com/questions/597395/how-to-set-custom-keyboard-shortcuts-from-terminal

    gsettings set org.gnome.desktop.wm.keybindings close "['<Super>q']"
    gsettings set org.gnome.desktop.wm.keybindings minimize "['<Super>h']"
    gsettings set org.gnome.desktop.wm.keybindings show-desktop "['<Super>d']"
    gsettings set org.gnome.desktop.wm.keybindings switch-input-source "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-input-source-backward "[]"
    gsettings set org.gnome.desktop.wm.keybindings toggle-fullscreen "['<Super>F11']"
    gsettings set org.gnome.desktop.wm.preferences button-layout 'close,minimize,maximize:appmenu'
    gsettings set org.gnome.mutter center-new-windows true

    if [ ! -f "$ECOS_INITIALIZED" ]; then
        gsettings set org.gnome.Terminal.Legacy.Settings theme-variant 'dark'
        gsettings set org.gnome.desktop.interface icon-theme 'ecos'
        gsettings set org.gnome.desktop.interface gtk-theme 'WhiteSur-light'
        gsettings set org.gnome.shell.extensions.user-theme name 'WhiteSur-light'
        gsettings set org.gnome.desktop.interface cursor-theme 'Qogir'
    fi

    # Wallpaper
    if [ ! -f "$ECOS_INITIALIZED" ]; then
        gsettings set org.gnome.desktop.background picture-uri 'file://'$HOME'/.local/share/wallpaper'
    fi

    # Custom Key Bindings
    gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/']"

    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name 'Terminal'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command 'toggle --app gnome-terminal Gnome-terminal'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding '<Super>Return'

    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ name 'Firefox'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ command 'toggle --app firefox Firefox'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ binding '<Super>b'

    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/ name 'Nautilus'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/ command 'toggle --app nautilus Org.gnome.Nautilus'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/ binding '<Super>e'

    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/ name 'KeePass'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/ command 'toggle --app keepassxc KeePassXC'
    gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/ binding '<Super>k'

    # Extensions
    if [ ! -f "$ECOS_INITIALIZED" ]; then
        gsettings set org.gnome.shell disable-user-extensions false
        gsettings set org.gnome.shell disabled-extensions "['']"
        gsettings set org.gnome.shell enabled-extensions "['user-theme@gnome-shell-extensions.gcampax.github.com', 'x11gestures@joseexposito.github.io', 'appindicatorsupport@rgcjonas.gmail.com', 'just-perfection-desktop@just-perfection', 'dash-to-dock@micxgx.gmail.com', 'arch-update@RaphaelRochet', 'blur-my-shell@aunetx']"
    fi

    # Blur My Shell
    gsettings set org.gnome.shell.extensions.blur-my-shell blur-dash false
    gsettings set org.gnome.shell.extensions.blur-my-shell blur-panel false

    # Dash to Dock
    gsettings set org.gnome.shell.extensions.dash-to-dock hot-keys false

    # X11 Gestures
    #gsettings set /org/gnome/shell/extensions/x11gestures/swipe-fingers 4

    # Direcotry Icons
    #gio set -t 'string' "$HOME/Projekte" 'metadata::custom-icon' "file://$HOME/.local/share/icons/ecos/apps/folder-projects.svg"
    gio set -t 'string' "$HOME/Projekte" 'metadata::custom-icon-name' 'folder-favorites'

    ##################################################
    # SET UPDATE INDICATOR
    ##################################################
    #gsettings set org.gnome.shell.extensions.arch-update always-visible false
    gsettings set org.gnome.shell.extensions.arch-update check-cmd "/bin/sh -c \"(/usr/bin/checkupdates; /usr/bin/paru -Qqu --color never | sed 's/Get .*//') | sort -u -t' ' -k1,1\""
    gsettings set org.gnome.shell.extensions.arch-update update-cmd "gnome-terminal -e 'bash -c  \"ecos --manager\"'"

    ##################################################
    # ENABLE GNOME TERMINAL PADDING
    ##################################################

    mkdir -p "$HOME/.config/gtk-3.0"
    echo 'VteTerminal,
TerminalScreen,
vte-terminal {
    padding: 24px 32px 32px 32px;
    -VteTerminal-inner-border: 12px 12px 12px 12px;
}' >"$HOME/.config/gtk-3.0/gtk.css"

    ##################################################
    # ECOS TWEAKS
    ##################################################

    $ECOS_CORE --tweak install theme_whitesur
    $ECOS_CORE --tweak install synology-drive

    ##################################################
    # CLEAR PACMAN
    ##################################################

    sudo pacman --noconfirm -Rs $(pacman -Qtdq)

    ##################################################
    # RESTART GNOME
    ##################################################

    killall -3 gnome-shell
}

##################################################
# UPDATE
##################################################

update() {
    $ECOS_CORE --tweak update theme_whitesur
    $ECOS_CORE --tweak update synology-drive
}

##################################################
# REMOVE
##################################################

remove() {
    sudo systemctl disable gdm.service
    $ECOS_CORE --tweak remove theme_whitesur
    $ECOS_CORE --tweak remove synology-drive
}

##################################################
# ARGUMENTS
##################################################

if [ "$1" = "--update" ]; then
    echo "UPDATING INIT SCRIPT..."
    update
    exit $?
fi

if [ "$1" = "--remove" ]; then
    echo "REMOVING INIT SCRIPT..."
    remove
    exit $?
fi

if [ "$1" = "--install" ]; then
    echo "INSTALLING INIT SCRIPT..."
    install "$@"
    exit $?
fi

# Help
echo "USE WITH PARAMETERS"
echo "--install"
echo "--update"
echo "--remove"
